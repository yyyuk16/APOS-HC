
<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
  <title>APOS-HC 調査票 - フォーム3</title>
  <link rel="stylesheet" href="main.css">
  <style>
    /* セクション表示の修正 */
    .section { 
      display: block !important; 
    }
    
    /* iPad用の追加スタイル */
    @media screen and (min-width: 768px) {
      body {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        font-size: 16px;
        line-height: 1.5;
      }
      
      .container {
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        padding: 25px;
        margin: 15px 0;
      }
      
      h1 {
        font-size: 1.8em;
        color: #2c3e50;
        text-align: center;
        margin-bottom: 25px;
        border-bottom: 2px solid #3498db;
        padding-bottom: 15px;
      }
      
      h2 {
        font-size: 1.4em;
        color: #34495e;
        margin: 25px 0 15px 0;
        padding: 10px 0;
        border-left: 4px solid #3498db;
        padding-left: 15px;
        background: linear-gradient(90deg, #f8f9fa 0%, transparent 100%);
      }
      
      fieldset {
        border: 2px solid #e0e6ed;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
        background: #fafbfc;
        transition: all 0.3s ease;
      }
      
      fieldset:hover {
        border-color: #3498db;
        box-shadow: 0 2px 10px rgba(52, 152, 219, 0.1);
      }
      
      legend {
        font-size: 1.1em;
        font-weight: bold;
        color: #2c3e50;
        padding: 0 10px;
        background: #fff;
        border-radius: 6px;
        border: 2px solid #3498db;
      }
      
      label {
        display: block;
        margin: 10px 0 5px 0;
        font-weight: 600;
        color: #34495e;
        font-size: 1em;
      }
      
      input[type="text"], input[type="tel"], input[type="email"], 
      input[type="number"], select, textarea {
        width: 100%;
        padding: 10px 12px;
        font-size: 1em;
        border: 2px solid #e0e6ed;
        border-radius: 6px;
        background: #fff;
        transition: all 0.3s ease;
        box-sizing: border-box;
        margin-top: 5px;
      }
      
      input:focus, select:focus, textarea:focus {
        outline: none;
        border-color: #3498db;
        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        transform: translateY(-2px);
      }
      
      textarea {
        resize: vertical;
        min-height: 80px;
        font-family: inherit;
      }
      
      .daily-rhythm-table {
        width: 100%;
        border-collapse: collapse;
        margin: 15px 0;
        background: #fff;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
      }
      
      .daily-rhythm-table th {
        background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
        color: white;
        padding: 12px 10px;
        font-size: 1em;
        font-weight: bold;
        text-align: center;
      }
      
      .daily-rhythm-table td {
        padding: 10px;
        border-bottom: 1px solid #e8f4f8;
        text-align: center;
        vertical-align: middle;
      }
      
      .daily-rhythm-table td:first-child {
        background: #f8f9fa;
        font-weight: 600;
        color: #2c3e50;
        font-size: 0.9em;
        width: 150px;
      }
      
      .daily-rhythm-table input {
        width: 100%;
        padding: 8px 10px;
        font-size: 0.9em;
        border: 2px solid #e0e6ed;
        border-radius: 6px;
        background: #fff;
        transition: all 0.3s ease;
        margin: 0;
      }
      
      .daily-rhythm-table input:focus {
        border-color: #3498db;
        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
      }
      
      .daily-rhythm-table tr:hover {
        background: #f8f9fa;
      }
      
      .note {
        font-size: 0.9em;
        color: #7f8c8d;
        margin-top: 10px;
        padding: 10px;
        background: #ecf0f1;
        border-radius: 6px;
        border-left: 3px solid #95a5a6;
      }
      
      .nav-buttons {
        margin-top: 25px;
        display: flex;
        justify-content: space-between;
        gap: 15px;
      }
      
      .nav-buttons button {
        padding: 12px 25px;
        font-size: 1em;
        font-weight: 600;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        min-width: 120px;
      }
      
      .nav-buttons button:first-child {
        background: linear-gradient(135deg, #95a5a6 0%, #7f8c8d 100%);
        color: white;
      }
      
      .nav-buttons button:last-child {
        background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
        color: white;
      }
      
      .nav-buttons button:hover {
        transform: translateY(-3px);
        box-shadow: 0 5px 20px rgba(0,0,0,0.2);
      }
      
      .nav-buttons button:active {
        transform: translateY(-1px);
      }
      
      /* プログレスバーのスタイル */
      .progress-container {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background: #fff;
        border-top: 1px solid #e0e0e0;
        padding: 20px;
        z-index: 1000;
      }
      
      .progress-wrapper {
        max-width: 800px;
        margin: 0 auto;
      }
      
      .progress-bar {
        width: 100%;
        height: 6px;
        background: #f0f0f0;
        border-radius: 3px;
        overflow: hidden;
        margin-bottom: 15px;
      }
      
      .progress-fill {
        height: 100%;
        background: #003366;
        border-radius: 3px;
        transition: width 0.5s ease;
        width: 80%;
      }
      
      .progress-info {
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 1.1em;
        color: #333;
        font-weight: 500;
      }
      
      .progress-page {
        color: #003366;
        font-weight: 600;
      }
      
      .progress-total {
        color: #999;
      }
      
      /* フォームの下部に余白を追加（プログレスバーの分） */
      body {
        padding-bottom: 100px;
      }
    }
    
    /* タブレット用の追加調整 */
    @media screen and (max-width: 1024px) and (min-width: 768px) {
      .daily-rhythm-table td:first-child {
        width: 140px;
      }
      
      .daily-rhythm-table input {
        font-size: 0.85em;
        padding: 6px 8px;
      }
    }
  </style>
</head>
<body>

<div class="container">
<h1>APOS-HC 調査票</h1>
<form id="surveyForm">
<div class="section" id="section-lifestyle-habits">
  <h2>Ⅰ　疾病の兆候</h2>

  <td style="border:1px solid #b0d6e6;">1.何かが変だ</td>
  <td style="border:1px solid #b0d6e6;"></td>

  <td style="border:1px solid #b0d6e6;">
    <select name="vital_respiration" id="vital_respiration" style="width:98%; font-size:1em;">
      <option value="">選択してください</option>
      <option value="0">0. 特に変化を感じない／状態に変化がない</option>
      <option value="1">1. いつもと表情が違う・視線が違う・声の調子が違う・体の動き・動作が普段と違う等</option>
    </select>
  </td>
</tr>
<tr><br>
    <td style="border:1px solid #b0d6e6;">2. バイタルサインの変化</td>

  <table style="width:100%; border-collapse:collapse; margin-bottom:1.5em;">
    
   
    <tr>
      <td style="border:1px solid #b0d6e6;">1. 呼吸数</td>
      <td style="border:1px solid #b0d6e6;">
        <select name="vital_respiration" id="vital_respiration" style="width:98%; font-size:1em;">
          <option value="">選択してください</option>
          <option value="0">0. 成人12～20回/分　高齢者14～20回/分</option>
          <option value="1">1. 平均値より頻回・少ない回数</option>
        </select>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid #b0d6e6;">2. SpO2</td>
      <td style="border:1px solid #b0d6e6;">
        <select name="vital_spo2" id="vital_spo2" style="width:98%; font-size:1em;">
          <option value="">選択してください</option>
          <option value="0">0. 96％～99％</option>
          <option value="1">1. 平均値および異常値・低値</option>
        </select>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid #b0d6e6;">3. 体温</td>
      <td style="border:1px solid #b0d6e6;">
        <select name="vital_temp" id="vital_temp" style="width:98%; font-size:1em;">
          <option value="">選択してください</option>
          <option value="0">0. 36.5～37℃　高齢者35.0～36.5℃台</option>
          <option value="1">1. 異常・低値（寒冷・発熱）</option>
        </select>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid #b0d6e6;">4. 血圧</td>
      <td style="border:1px solid #b0d6e6;">
        <select name="vital_bp" id="vital_bp" style="width:98%; font-size:1em;">
          <option value="">選択してください</option>
          0：収縮120/80mmHg以下　75歳以上130/80mmHg以下
          <option value="0">0：収縮120/80mmHg以下　75歳以上130/80mmHg以下</option>
          <option value="1">1. 平均値より高い・低値</option>
        </select>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid #b0d6e6;">5. 脈拍</td>
      <td style="border:1px solid #b0d6e6;">
        <select name="vital_pulse" id="vital_pulse" style="width:98%; font-size:1em;">
          <option value="">選択してください</option>
          <option value="0">0. 51～90回/分</option>
          <option value="1">1. 50以下、91以上</option>
        </select>
      </td>
    </tr>
    <tr>
      <td style="border:1px solid #b0d6e6;">6. 意識レベル</td>
      <td style="border:1px solid #b0d6e6;">
        <select name="consciousness_level" id="consciousness_level" style="width:98%; font-size:1em;">
          <option value="">選択してください</option>
          <option value="0">0. 覚醒</option>
          <option value="1">1. 覚醒だが（多弁、不必要な言動、表情の変化）</option>
          <option value="2">2. 意識なし</option>
        </select>
      </td>
    </tr>
    <tr>
        <td style="border:1px solid #b0d6e6;">7. 皮膚の変化</td>
        <td style="border:1px solid #b0d6e6;">
            <select name="skin_changes" id="skin_changes" style="width:98%; font-size:1em;">
            <option value="">選択してください</option>
            <option value="0">0. なし</option>
            <option value="1">1. 冷汗・湿潤・末梢冷汗・チアノーゼ</option>
          </select>
        </td>
      </tr>
    </table>
  </fieldset>


<!-- バイタルサイン基準表の追加 -->
<div style="margin: 24px 0;">
  <table style="width: 400px; margin: auto; border-collapse: collapse; font-size: 1em; text-align: center;">
    <thead>
      <tr>
        <th colspan="2" style="border: 1px solid #b0d6e6; background: #f4eee4; font-size: 1.1em; padding: 8px;">
          バイタルサイン基準表
        </th>
      </tr>
    </thead>
    <tbody>
      <tr style="background: #fff7e0;">
        <td style="border: 1px solid #b0d6e6; width: 45%;">体温（BT）</td>
        <td style="border: 1px solid #b0d6e6;">36.5～37℃台</td>
      </tr>
      <tr style="background: #fff7e0;">
        <td style="border: 1px solid #b0d6e6;">血圧（BP）</td>
        <td style="border: 1px solid #b0d6e6;">120/80mmHg<br>（高齢者 130/80mmHg）</td>
      </tr>
      <tr style="background: #f8fafc;">
        <td style="border: 1px solid #b0d6e6;">脈拍（PR）または心拍数（HR）</td>
        <td style="border: 1px solid #b0d6e6;">60～100回/分</td>
      </tr>
      <tr style="background: #f8fafc;">
        <td style="border: 1px solid #b0d6e6;">呼吸数（RR）</td>
        <td style="border: 1px solid #b0d6e6;">12～20回/分<br>（高齢者 14～20回/分）</td>
      </tr>
      <tr style="background: #e7f8fc;">
        <td style="border: 1px solid #b0d6e6;">意識レベル（LOC）</td>
        <td style="border: 1px solid #b0d6e6;">JCS: 0<br>GCS: 15点（満点）</td>
      </tr>
    </tbody>
  </table>
  <div style="text-align:right; font-size: 0.93em; color: #4d6469; margin-top: 6px;">
    ※参考: 早期警戒スコア(Early Warning Score: EWS)、<br>
    National Early Warning Score（NEWS）より
  </div>
</div>
</div>
    <tr>
      <td style="border:1px solid #b0d6e6;">3. 呼吸（グレード分類）</td>
      <td style="border:1px solid #b0d6e6;">下の表を参照してください</td>

      <td style="border:1px solid #b0d6e6;">
        <select name="vital_respiration" id="vital_respiration" style="width:98%; font-size:1em;">
          <option value="">当てはまる分類にチェックしてください（1つだけ）</option>
          <option value="0">0. 激しい運動をしたときだけ息切れがある</option>
          <option value="1">1. 平坦な道を早足で歩く、あるいは坂や階段、上り坂を歩く時に息切れがある</option>
          <option value="2">2. 平坦な道を歩いても、同年代の人よりも呼吸困難を感じ始める、あるいは平坦な道を自分のペースで歩いているとき、息切れのために立ち止まることがある</option>
          <option value="3">3. 平坦な道を約90m、あるいは数分歩くと息切れのために立ち止まる</option>
          <option value="4">4. 息切れのために家から外に出られない、あるいは衣服の着替えをするときにも息切れがある、寝ている時にもある</option>
        </select>
      </td>
    </tr>
    <tr>
      <td colspan="2" style="border:1px solid #b0d6e6; font-weight:bold;">
        4｜心機能：NYHA心機能分類（※2022 AHA/ACC/HFSA心不全の管理に関するガイドライン：米国心臓学会）<br>
        <span style="font-size:0.95em;">※ニューヨーク心機能分類表改訂ガイドライン合同委員会報告</span>
        <table style="width:100%; border-collapse:collapse; margin-top:1em; font-size:0.98em;">
          <tr>
            <th style="border:1px solid #b0d6e6; background:#eaf6fb; width:40px;">&nbsp;</th>
            <th style="border:1px solid #b0d6e6; background:#eaf6fb;">定義</th>
            <th style="border:1px solid #b0d6e6; background:#eaf6fb; width:180px;">日常生活での目安</th>
          </tr>
          <tr>
            <td style="border:1px solid #b0d6e6; text-align:center;">0</td>
            <td style="border:1px solid #b0d6e6;">心疾患なし</td>
            <td style="border:1px solid #b0d6e6;">設定表を<br>「みせない」</td>
          </tr>
          <tr>
            <td style="border:1px solid #b0d6e6; text-align:center;">I</td>
            <td style="border:1px solid #b0d6e6;">
              心疾患があるが、身体活動に制限がない患者<br>
              通常の身体活動で、疲労・動悸・呼吸困難・狭心痛を生じない
            </td>
            <td style="border:1px solid #b0d6e6;">設定表を<br>「みせない」</td>
          </tr>
          <tr>
            <td style="border:1px solid #b0d6e6; text-align:center;">II</td>
            <td style="border:1px solid #b0d6e6;">
              心疾患を有し、日常的な身体活動で軽度の障害を生じる患者<br>
              通常の身体活動で、疲労・動悸・呼吸困難・狭心痛を生じる
            </td>
            <td style="border:1px solid #b0d6e6;">階段を上ると<br>ゼイゼイ</td>
          </tr>
          <tr>
            <td style="border:1px solid #b0d6e6; text-align:center;">III</td>
            <td style="border:1px solid #b0d6e6;">
              心疾患を有し、身体活動が著しく制限される患者<br>
              通常以下の身体活動で、疲労・動悸・呼吸困難・狭心痛を生じる
            </td>
            <td style="border:1px solid #b0d6e6;">平らな道でも<br>ゼイゼイ</td>
          </tr>
          <tr>
            <td style="border:1px solid #b0d6e6; text-align:center;">IV</td>
            <td style="border:1px solid #b0d6e6;">
              心疾患を有し、いかなる身体活動も制限される患者<br>
              心不全症状が安静時にも存在する。わずかな身体活動で症状が増悪する
            </td>
            <td style="border:1px solid #b0d6e6;">※じっとしていても<br>ゼイゼイ</td>
          </tr>
        </table>
        <div style="margin-top:1em;">
          <label for="nyha_class" style="font-weight:bold;">NYHA心機能分類：</label>
          <select name="nyha_class" id="nyha_class" style="font-size:1em; width:180px;">
            <option value="">選択してください</option>
            <option value="0">0</option>
            <option value="I">I</option>
            <option value="II">II</option>
            <option value="III">III</option>
            <option value="IV">IV</option>
          </select>



    <div class="nav-buttons">
      <button type="button" onclick="location.href='form14.html'">← 戻る</button>
      <button type="button" onclick="location.href='form16.html'">次へ →</button>
    </div>
  </form>
</div>

<script>
  // 高額費用の利用：理由欄表示
  function toggleExpensiveCostDetail() {
    const val = document.getElementById('expensive_cost_usage').value;
    const reasonDiv = document.getElementById('expensive_cost_reason');
    if (val === '2a' || val === '2b') {
      reasonDiv.style.display = 'block';
    } else {
      reasonDiv.style.display = 'none';
    }
  }
  
  // 公費医療の利用：理由欄表示
  function togglePublicMedicalReason() {
    const val = document.getElementById('public_medical_usage').value;
    const reasonDiv = document.getElementById('public_medical_reason');
    if (val === '2') {
      reasonDiv.style.display = 'block';
    } else {
      reasonDiv.style.display = 'none';
    }
  }
  
  // 公費医療の詳細：病名入力欄表示
  function toggleMedicalDiseaseInput() {
    const val = document.getElementById('public_medical_detail').value;
    const inputDiv = document.getElementById('medical_disease_input');
    if (val === '5' || val === '3') {
      inputDiv.style.display = 'block';
    } else {
      inputDiv.style.display = 'none';
    }
  }
  
  // 公費制度の利用：理由欄表示
  function togglePublicSystemReason() {
    const val = document.getElementById('public_system_usage').value;
    const reasonDiv = document.getElementById('public_system_reason');
    if (val === '2') {
      reasonDiv.style.display = 'block';
    } else {
      reasonDiv.style.display = 'none';
    }
  }
  
  // 公費制度の詳細：詳細入力欄表示
  function toggleSystemDetailInput() {
    const val = document.getElementById('public_system_detail').value;
    const inputDiv = document.getElementById('system_detail_input');
    if (val === '1' || val === '2') {
      inputDiv.style.display = 'block';
    } else {
      inputDiv.style.display = 'none';
    }
  }

  // フォームの自動保存機能
  const form = document.getElementById('surveyForm');
  form.addEventListener('input', () => {
    const data = Object.fromEntries(new FormData(form));
    localStorage.setItem('surveyData_form2', JSON.stringify(data));
  });

  // 保存されたデータの復元
  window.addEventListener('load', () => {
    const saved = localStorage.getItem('surveyData_form2');
    if (saved) {
      const data = JSON.parse(saved);
      Object.keys(data).forEach(key => {
        const el = form.elements[key];
        if (el) {
          el.value = data[key];
        }
      });
    }
  });
</script>

  <!-- プログレスバー -->
  <div class="progress-container">
    <div class="progress-wrapper">
      <div class="progress-bar">
        <div class="progress-fill" id="progressFill"></div>
      </div>
      <div class="progress-info">
        <span class="progress-page" id="currentPage">16</span>
        <span class="progress-total">/ 20</span>
      </div>
    </div>
  </div>

  <script>
    // プログレスバーの更新
    function updateProgress() {
      const progressPercentage = (16 / 20) * 100;
      const progressFill = document.getElementById('progressFill');
      const currentPageElement = document.getElementById('currentPage');
      
      progressFill.style.width = progressPercentage + '%';
      currentPageElement.textContent = '16';
      progressFill.style.background = '#003366';
    }
    
    // 初期プログレス更新
    document.addEventListener('DOMContentLoaded', function() {
      updateProgress();
      
      // フォームの自動保存機能
      const form = document.getElementById('surveyForm');
      const formNumber = 15;
      
      if (form) {
        function collectFormData() {
          const formData = new FormData(form);
          const data = {};
          for (let [key, value] of formData.entries()) {
            if (data[key]) {
              if (Array.isArray(data[key])) {
                data[key].push(value);
              } else {
                data[key] = [data[key], value];
              }
            } else {
              data[key] = value;
            }
          }
          const canvases = form.querySelectorAll('canvas');
          canvases.forEach((canvas, index) => {
            try {
              const canvasId = canvas.id || `canvas_${index}`;
              data[canvasId + '_image'] = canvas.toDataURL('image/png');
            } catch (e) {
              console.error('Canvas保存エラー:', e);
            }
          });
          const allInputs = form.querySelectorAll('input, select, textarea');
          allInputs.forEach(input => {
            if (!input.name) return;
            const isProcessed = data.hasOwnProperty(input.name);
            if (input.type === 'checkbox') {
              if (input.checked) {
                if (!data[input.name]) data[input.name] = [];
                if (Array.isArray(data[input.name])) {
                  if (!data[input.name].includes(input.value)) data[input.name].push(input.value);
                } else {
                  data[input.name] = [data[input.name], input.value];
                }
              }
            } else if (input.type === 'radio') {
              if (input.checked && !isProcessed) data[input.name] = input.value;
            } else {
              if (!isProcessed && input.value) data[input.name] = input.value;
            }
          });
          return data;
        }
        
        form.addEventListener('input', function() {
          const data = collectFormData();
          localStorage.setItem(`surveyData_form${formNumber}`, JSON.stringify(data));
          console.log(`Form ${formNumber} データを自動保存しました`);
        });
        
        form.addEventListener('change', function() {
          const data = collectFormData();
          localStorage.setItem(`surveyData_form${formNumber}`, JSON.stringify(data));
          console.log(`Form ${formNumber} データを自動保存しました`);
        });
        
        const savedData = localStorage.getItem(`surveyData_form${formNumber}`);
        if (savedData) {
          const data = JSON.parse(savedData);
          Object.keys(data).forEach(key => {
            const elements = form.elements[key];
            if (elements) {
              if (elements.length > 1) {
                Array.from(elements).forEach(el => {
                  if (el.type === 'checkbox' || el.type === 'radio') {
                    if (Array.isArray(data[key])) {
                      el.checked = data[key].includes(el.value);
                    } else {
                      el.checked = el.value === data[key];
                    }
                  }
                });
              } else if (elements.length === 1) {
                const el = elements[0];
                if (el.type === 'checkbox' || el.type === 'radio') {
                  if (Array.isArray(data[key])) {
                    el.checked = data[key].includes(el.value);
                  } else {
                    el.checked = el.value === data[key];
                  }
                } else {
                  el.value = data[key] || '';
                }
              } else {
                if (elements.type === 'checkbox' || elements.type === 'radio') {
                  if (Array.isArray(data[key])) {
                    elements.checked = data[key].includes(elements.value);
                  } else {
                    elements.checked = elements.value === data[key];
                  }
                } else {
                  elements.value = data[key] || '';
                }
              }
            }
          });
          console.log(`Form ${formNumber} の保存データを復元しました`);
        }
      }
    });
  </script>

</body>
</html>



